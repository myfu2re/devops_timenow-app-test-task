events {
	worker_connections 1024;
}

http {
    server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	root /var/www/timenow-fe;
#	server_name 3.71.205.41;
	server_name timenow.local;

		ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
		ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

	location /api {
		proxy_pass http://localhost:8080/api;

		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;

#  		proxy_buffering off;
#  		proxy_set_header X-Real-IP $remote_addr;
  		proxy_set_header X-Forwarded-Host $host;
  		proxy_set_header X-Forwarded-Port $server_port;

#		proxy_http_version  1.1;
#     	proxy_redirect      default;
#      	proxy_set_header    Upgrade $http_upgrade;
#      	proxy_set_header    Connection "upgrade";
#      	proxy_set_header    Host $host;
#      	proxy_set_header    X-Real-IP $remote_addr;
#      	proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
#      	proxy_set_header    X-Forwarded-Host $server_name;

		add_header Access-Control-Allow-Origin "*";

#		proxy_set_header X-Real-IP $remote_addr;
#		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#		proxy_set_header X-Forwarded-Proto $scheme;
#       proxy_set_header Host $host;
#       proxy_redirect http:// https://;
#       proxy_http_version 1.1;
#       proxy_set_header Upgrade $http_upgrade;
#		proxy_set_header Connection "upgrade";
#		proxy_cache_bypass $http_upgrade;
#	    proxy_redirect          http://localhost:8080/  /api/;
#       proxy_pass_header       Server;	
	
		}
	}

	server {
	listen 80;
	listen [::]:80;
	
	return 301 https://$host$request_uri;
	
	}

}